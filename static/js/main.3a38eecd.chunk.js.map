{"version":3,"sources":["images/ioak_white.svg","images/ioak_black.svg","images/github_white.svg","images/github_black.svg","reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","actions/ProfileActions.ts","events/MessageService.ts","components/Navigation/Links.tsx","events/SearchEvent.ts","oakui/SearchBar.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","oakui/OakButton.tsx","oakui/OakCardWide.tsx","components/Home/ProjectTile.tsx","components/Home/TechnologyTile.tsx","components/Home/index.tsx","actions/AuthActions.ts","components/Lib/RestTemplate.ts","components/Auth/AuthInit.tsx","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Constants.ts","components/Auth/OakRoute.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","initialState","isAuth","email","firstName","lastName","theme","textSize","themeColor","tenant","appStatus","combineReducers","authorization","state","action","type","console","log","payload","token","profile","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","getProfile","dispatch","setProfile","subject","Subject","sendMessage","name","signal","data","next","receiveMessage","asObservable","Links","props","className","to","id","searchTextChangedEvent$","BehaviorSubject","searchEvent$","SearchBar","useState","searchText","setSearchText","useEffect","searchTextChangedEventListener","subscribe","unsubscribe","method","onSubmit","event","preventDefault","noValidate","alt","spellCheck","autoComplete","autoFocus","placeholder","required","value","onChange","target","xmlns","width","height","viewBox","d","Desktop","showSearchBar","setShowSearchBar","message","transparent","src","ioakBlack","ioakWhite","onClick","toggleDarkMode","Mobile","menu","setData","toggleMenu","mirrorBlack","mirrorWhite","connect","withCookies","withRouter","visible","mobilemenu","chooseTheme","showSettings","transparentNavBar","firstLoad","toggleSettings","OakButton","style","variant","children","invert","small","align","getStyle","icon","OakCardWide","reverse","image","ProjectTile","useSelector","tile","lightLogo","darkLogo","title","description","dangerouslySetInnerHTML","__html","footnote","appUrl","window","open","codeUrl","map","item","url","githubLogoLight","githubLogoDark","label","TechnologyTile","projectsCompleted","require","projectsInprogress","projectsPipeline","technologies","sectionNames","Home","hash","history","location","document","getElementById","substr","setTimeout","scrollIntoView","behavior","sectionName","addEventListener","classList","add","remove","project","technology","getAuth","addAuth","removeAuth","baseUrl","process","httpGet","endpoint","headers","axios","get","useDispatch","authKey","cookies","then","sessionResponse","status","secret","Backdrop","backdrop","setBackdrop","eventBus","Notification","spinner","setSpinner","undefined","notification","setNotification","duration","data-test","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL_STAGE","API_URL_PREDICT","API_URL_ARTICLE","API_URL_CATEGORY","API_URL_FAQ","API_URL_SR","API_URL_USER","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","API_SPACE_CREATE","ChildComponent","component","rest","loginPage","match","params","middlewares","layers","forEach","middlewareName","runMidleware","isAuthenticated","isAdmin","redirectToLogin","redirectToUnauthorized","href","push","redirectIfNotAuthenticated","indexOf","themes","themecolor1","getTheme","themecolor2","themecolor3","themecolor4","color","createMuiTheme","palette","primary","main","secondary","logout","Authorization","response","addUser","path","render","propsLocal","exact","App","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a38eecd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ioak_white.5d65b00b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ioak_black.c077c1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_white.05f8f424.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_black.85801247.svg\";","import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  email: '',\r\n  firstName: '',\r\n  lastName: '',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_AUTH:\r\n      console.log('GET_AUTH reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case ADD_AUTH:\r\n      console.log('ADD_AUTH reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    case REMOVE_AUTH:\r\n      console.log('REMOVE_AUTH reducer');\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        token: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  theme: 'theme_light',\r\n  textSize: 'textsize_medium',\r\n  themeColor: 'themecolor1',\r\n  tenant: '',\r\n  appStatus: 'notmounted',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILE:\r\n      console.log('GET_PROFILE reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case SET_PROFILE:\r\n      console.log('SET_PROFILE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n  authorization: AuthReducer,\r\n  profile: ProfileReducer,\r\n});\r\n","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';\r\n\r\nexport const GET_USER = 'GET_USER';\r\nexport const ADD_USER = 'ADD_USER';\r\n\r\nexport const FETCH_ARTICLE = 'FETCH_ARTICLE';\r\nexport const FETCH_REQUEST = 'FETCH_REQUEST';\r\nexport const FETCH_STAGE = 'FETCH_STAGE';\r\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware) // ,\r\n    // window['__REDUX_DEVTOOLS_EXTENSION__'] &&\r\n    //   window['__REDUX_DEVTOOLS_EXTENSION__']()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n  dispatch({\r\n    type: GET_PROFILE,\r\n  });\r\n};\r\n\r\nexport const setProfile = payload => dispatch => {\r\n  dispatch({\r\n    type: SET_PROFILE,\r\n    payload,\r\n  });\r\n};\r\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal = true, data?: {}) {\r\n  subject.next({\r\n    name,\r\n    signal,\r\n    data,\r\n  });\r\n}\r\n\r\nexport function clearMessages() {\r\n  subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n  return subject.asObservable();\r\n}\r\n","import React from 'react';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  profile: Profile;\r\n}\r\n\r\nconst Links = (props: Props) => {\r\n  const navigate = section => {\r\n    sendMessage('navigate', true, section);\r\n  };\r\n  return (\r\n    <div className=\"links\">\r\n      {/* <Link smooth to=\"/home#technologies\">\r\n        Technologies\r\n      </Link> */}\r\n      <NavLink to=\"/home#intro\" className=\"navitem\" id=\"link_intro\">\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/home#projects_completed\"\r\n        className=\"navitem\"\r\n        id=\"link_projects_completed\"\r\n      >\r\n        Projects\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/home#technologies\"\r\n        className=\"navitem\"\r\n        id=\"link_technologies\"\r\n      >\r\n        Programming Languages\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>('');\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { useEffect, useState } from 'react';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean;\r\n}\r\n\r\nconst SearchBar = (props: Props) => {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const searchTextChangedEventListener = searchTextChangedEvent$.subscribe(\r\n      data => {\r\n        setSearchText(data);\r\n      }\r\n    );\r\n    return () => searchTextChangedEventListener.unsubscribe();\r\n  }, []);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    searchEvent$.next(searchText);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form method=\"GET\" onSubmit={onSubmit} noValidate>\r\n      <div className={`search-bar${props.alt ? ' alt' : ''}`}>\r\n        <input\r\n          name=\"searchText\"\r\n          spellCheck={false}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\"\r\n          required\r\n          value={searchText}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"icon\">\r\n          <i>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n            </svg>\r\n          </i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './style.scss';\r\nimport ioakWhite from '../../images/ioak_white.svg';\r\nimport ioakBlack from '../../images/ioak_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport SearchBar from '../../oakui/SearchBar';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  authorization: Authorization;\r\n  getProfile: Function;\r\n  toggleDarkMode: Function;\r\n  profile: Profile;\r\n  transparent: boolean;\r\n  toggleSettings: any;\r\n}\r\n\r\nconst Desktop = (props: Props) => {\r\n  const [showSearchBar, setShowSearchBar] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'show-navbar-element') {\r\n        setShowSearchBar(message.signal);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.transparent ? 'navbar desktop transparent' : 'navbar desktop'\r\n      }\r\n    >\r\n      <div className=\"left\">\r\n        {!props.transparent && props.profile.theme === 'theme_light' && (\r\n          <img className=\"logo\" src={ioakBlack} alt=\"IOAK logo\" />\r\n        )}\r\n        {(props.transparent || props.profile.theme === 'theme_dark') && (\r\n          <img className=\"logo\" src={ioakWhite} alt=\"IOAK logo\" />\r\n        )}\r\n        <Links authorization={props.authorization} profile={props.profile} />\r\n        {showSearchBar && <SearchBar alt />}\r\n      </div>\r\n      <div className=\"right\">\r\n        <div className=\"dark-mode\">\r\n          <i className=\"material-icons\" onClick={() => props.toggleDarkMode()}>\r\n            brightness_6\r\n          </i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Desktop;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport mirrorWhite from '../../images/ioak_white.svg';\r\nimport mirrorBlack from '../../images/ioak_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../../oakui/SearchBar';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  authorization: Authorization;\r\n  getProfile: Function;\r\n  toggleDarkMode: Function;\r\n  profile: Profile;\r\n  transparent: boolean;\r\n  toggleSettings: any;\r\n}\r\n\r\nconst Mobile = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    showSearchBar: false,\r\n    menu: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'show-navbar-element') {\r\n        setData({ ...data, showSearchBar: message.signal });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setData({ ...data, menu: !data.menu });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          props.transparent ? 'navbar mobile transparent' : 'navbar mobile'\r\n        }\r\n      >\r\n        <div className=\"left\">\r\n          {props.profile.theme === 'theme_light' && (\r\n            <img className=\"logo\" src={mirrorBlack} alt=\"Mirror logo\" />\r\n          )}\r\n          {props.profile.theme === 'theme_dark' && (\r\n            <img className=\"logo\" src={mirrorWhite} alt=\"Mirror logo\" />\r\n          )}\r\n          {/* links */}\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"dark-mode\">\r\n            <i\r\n              className=\"material-icons\"\r\n              onClick={() => props.toggleDarkMode()}\r\n            >\r\n              brightness_6\r\n            </i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={data.menu ? 'slider show' : 'slider hide'}\r\n        onClick={toggleMenu}\r\n      >\r\n        <div\r\n          className={data.menu ? 'container' : 'container hidetext'}\r\n          onClick={toggleMenu}\r\n        >\r\n          <div className=\"action\">\r\n            <div className=\"buttons\" />\r\n          </div>\r\n          <Links authorization={props.authorization} profile={props.profile} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mobile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  authorization: Authorization;\r\n  getProfile: Function;\r\n  setProfile: Function;\r\n  profile: Profile;\r\n  transparent: boolean;\r\n  toggleSettings: any;\r\n  history: any;\r\n  cookies: any;\r\n  location: any;\r\n  match: any;\r\n}\r\n\r\nconst Navigation = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    visible: false,\r\n    mobilemenu: 'hide',\r\n    chooseTheme: false,\r\n    showSettings: false,\r\n    transparentNavBar: false,\r\n    firstLoad: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'navbar-transparency') {\r\n        setData({ ...data, transparentNavBar: message.signal });\r\n      }\r\n      if (message.name === 'loggedin') {\r\n        // props.reloadProfile(nextProps.authorization);\r\n        setData({ ...data, firstLoad: false });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data.firstLoad && props.authorization && props.authorization.isAuth) {\r\n      setData({ ...data, firstLoad: false });\r\n    }\r\n  }, [props.authorization.isAuth]);\r\n\r\n  const toggleDarkMode = () => {\r\n    if (props.profile.theme === 'theme_dark') {\r\n      props.setProfile({\r\n        ...props.profile,\r\n        theme: 'theme_light',\r\n      });\r\n    } else {\r\n      props.setProfile({\r\n        ...props.profile,\r\n        theme: 'theme_dark',\r\n      });\r\n    }\r\n  };\r\n\r\n  const toggleSettings = () => {\r\n    setData({ ...data, showSettings: !data.showSettings });\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <Desktop\r\n        {...props}\r\n        toggleSettings={toggleSettings}\r\n        transparent={data.transparentNavBar}\r\n        toggleDarkMode={toggleDarkMode}\r\n      />\r\n      <Mobile\r\n        {...props}\r\n        toggleSettings={toggleSettings}\r\n        transparent={data.transparentNavBar}\r\n        toggleDarkMode={toggleDarkMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(\r\n  withCookies(withRouter(Navigation))\r\n);\r\n","import React, { ReactNode } from 'react';\r\nimport './styles/oak-button-slide.scss';\r\n\r\ninterface Props {\r\n  icon?: string;\r\n  action?: any;\r\n  variant?:\r\n    | 'block'\r\n    | 'outline'\r\n    | 'animate in'\r\n    | 'animate out'\r\n    | 'animate none'\r\n    | 'disabled';\r\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default';\r\n  align?: 'left' | 'right' | 'center';\r\n  small?: boolean;\r\n  invert?: boolean;\r\n  children?: ReactNode;\r\n  type?: 'button' | 'submit';\r\n}\r\n\r\nconst OakButton = (props: Props) => {\r\n  const getStyle = () => {\r\n    let style = props.theme ? props.theme : '';\r\n    style += props.variant ? ` ${props.variant}` : '';\r\n\r\n    if (!props.children) {\r\n      style += ' icon';\r\n    }\r\n\r\n    style += props.invert ? ' invert' : '';\r\n\r\n    style += props.small ? ' small' : '';\r\n\r\n    style += props.align ? ` align-${props.align}` : '';\r\n\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    // eslint-disable-next-line react/button-has-type\r\n    <button className={`oak-button ${getStyle()}`} onClick={props.action}>\r\n      {props.icon && <i className=\"material-icons\">{props.icon}</i>}\r\n      {props.children && props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OakButton;\r\n","import React, { ReactNode, useState, useEffect } from 'react';\r\nimport './styles/oak-card-wide.scss';\r\n\r\nconst rootAssetsPath = 'images';\r\n\r\ninterface Props {\r\n  image: any;\r\n  children?: ReactNode;\r\n  reverse?: boolean;\r\n}\r\nfunction OakCardWide(props: Props) {\r\n  return (\r\n    <div className={props.reverse ? 'oak-wide-card reverse' : 'oak-wide-card'}>\r\n      <div className=\"content\">{props.children}</div>\r\n      <div className=\"preview\">\r\n        <img\r\n          className=\"photo\"\r\n          src={`${rootAssetsPath}/${props.image}`}\r\n          alt=\"tile\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OakCardWide;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakCardWide from '../../oakui/OakCardWide';\r\nimport githubLogoLight from '../../images/github_white.svg';\r\nimport githubLogoDark from '../../images/github_black.svg';\r\n\r\ninterface Props {\r\n  data: {\r\n    lightLogo: string;\r\n    darkLogo: string;\r\n    tile: string;\r\n    title: string;\r\n    description: string;\r\n    footnote: string;\r\n    appUrl: string;\r\n    codeUrl: any;\r\n  };\r\n}\r\nconst rootAssetsPath = 'images';\r\n\r\nconst ProjectTile = (props: Props) => {\r\n  const profile = useSelector(state => state.profile);\r\n\r\n  const visitSite = () => {\r\n    window.open(props.data.appUrl);\r\n  };\r\n\r\n  const visitGithub = url => {\r\n    window.open(url);\r\n  };\r\n\r\n  return (\r\n    <OakCardWide image={props.data.tile}>\r\n      <div className=\"project\">\r\n        <div className=\"title\">\r\n          <div>\r\n            <img\r\n              className=\"logo\"\r\n              src={\r\n                profile.theme === 'theme_dark'\r\n                  ? `${rootAssetsPath}/${props.data.lightLogo}`\r\n                  : `${rootAssetsPath}/${props.data.darkLogo}`\r\n              }\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n          <div className=\"subtitle\">{props.data.title}</div>\r\n          <div className=\"underline\" />\r\n        </div>\r\n        <div className=\"description\">{props.data.description}</div>\r\n        <div\r\n          className=\"footnote\"\r\n          dangerouslySetInnerHTML={{ __html: props.data.footnote }}\r\n        />\r\n        <div className=\"footer\">\r\n          {props.data.appUrl && (\r\n            <div>\r\n              <OakButton\r\n                theme=\"primary\"\r\n                variant=\"animate in\"\r\n                action={visitSite}\r\n                icon=\"touch_app\"\r\n              >\r\n                Visit Site\r\n              </OakButton>\r\n            </div>\r\n          )}\r\n          {props.data.codeUrl &&\r\n            props.data.codeUrl.map(item => (\r\n              <OakButton\r\n                theme=\"primary\"\r\n                variant=\"animate in\"\r\n                action={() => visitGithub(item.url)}\r\n              >\r\n                <div className=\"button-with-logo\">\r\n                  <img\r\n                    src={\r\n                      profile.theme === 'theme_dark'\r\n                        ? githubLogoLight\r\n                        : githubLogoDark\r\n                    }\r\n                    alt=\"github logo\"\r\n                  />\r\n                  {item.label}\r\n                </div>\r\n              </OakButton>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </OakCardWide>\r\n  );\r\n};\r\n\r\nexport default ProjectTile;\r\n","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\ninterface Props {\r\n  data: {\r\n    logo: string;\r\n    title: string;\r\n    description: string;\r\n  };\r\n}\r\nconst rootAssetsPath = 'images';\r\n\r\nconst TechnologyTile = (props: Props) => {\r\n  return (\r\n    <div className=\"technology\">\r\n      {/* <div className=\"logo\">\r\n        <img\r\n          className=\"logo\"\r\n          src={`${rootAssetsPath}/${props.data.logo}`}\r\n          alt=\"logo\"\r\n        />\r\n      </div> */}\r\n      <div className=\"title\">{props.data.title}</div>\r\n      <div className=\"description\">{props.data.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechnologyTile;\r\n","import React, { useEffect } from 'react';\r\nimport Navigation from '../Navigation';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport './style.scss';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport ProjectTile from './ProjectTile';\r\nimport TechnologyTile from './TechnologyTile';\r\n\r\nconst projectsCompleted = require('./projects_completed.json');\r\nconst projectsInprogress = require('./projects_inprogress.json');\r\nconst projectsPipeline = require('./projects_pipeline.json');\r\nconst technologies = require('./technologies.json');\r\n\r\ninterface Props {\r\n  label?: string;\r\n  history: any;\r\n}\r\nconst sectionNames = ['intro', 'projects_completed', 'technologies'];\r\n\r\nconst Home = (props: Props) => {\r\n  useEffect(() => {\r\n    const { hash } = props.history.location;\r\n    if (hash && document && document.getElementById(hash.substr(1))) {\r\n      // if (hash.substr(1) !== 'intro') {\r\n      setTimeout(() => {\r\n        document\r\n          .getElementById(hash.substr(1))\r\n          ?.scrollIntoView({ behavior: 'smooth' });\r\n      }, 0);\r\n      // }\r\n    }\r\n  }, [props.history.location.hash]);\r\n  useEffect(() => {\r\n    sectionNames.map(sectionName => {\r\n      document\r\n        .getElementById(sectionName)\r\n        ?.addEventListener('mouseenter', () => {\r\n          sectionNames.map(item => {\r\n            if (item === sectionName) {\r\n              document\r\n                .getElementById(`link_${item}`)\r\n                ?.classList.add('active-link');\r\n            } else {\r\n              document\r\n                .getElementById(`link_${item}`)\r\n                ?.classList.remove('active-link');\r\n            }\r\n          });\r\n        });\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(event => {\r\n      if (event.name === 'navigate') {\r\n        console.log(event);\r\n        setTimeout(() => {\r\n          document\r\n            .getElementById(event.data)\r\n            ?.scrollIntoView({ behavior: 'smooth' });\r\n        }, 1000);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <header>\r\n        <div>\r\n          <Navigation {...props} />\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <section className=\"intro\" id=\"intro\">\r\n          <div className=\"overlay\">\r\n            <div className=\"container\">\r\n              <div className=\"header\">\r\n                <h1>Open developer community</h1>\r\n                <p className=\"subtitle\">Knowledge should be free for all</p>\r\n              </div>\r\n              {/* <div className=\"main\">\r\n                <p>\r\n                  Join us to learn programming in realtime. Build pages that\r\n                  convert your traffic and leads into more business – even if\r\n                  web design is not really your thing\r\n                </p>\r\n              </div> */}\r\n              <div className=\"footer\">\r\n                <div className=\"call-to-action\">\r\n                  {/* <OakButton theme=\"primary\" variant=\"animate none\">\r\n                    Join the community\r\n                  </OakButton> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"projects completed\" id=\"projects_completed\">\r\n          <div className=\"container\">\r\n            <div className=\"header\">\r\n              <h1>Completed projects</h1>\r\n              <div className=\"underline\" />\r\n            </div>\r\n            <div className=\"main\">\r\n              {projectsCompleted.map(project => {\r\n                return <ProjectTile data={project} />;\r\n              })}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"projects inprogress\" id=\"projects_inprogress\">\r\n          <div className=\"container\">\r\n            <div className=\"header\">\r\n              <h1>Ongoing projects</h1>\r\n              <div className=\"underline\" />\r\n            </div>\r\n            <div className=\"main\">\r\n              {projectsInprogress.map(project => (\r\n                <ProjectTile data={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"projects pipeline\" id=\"projects_pipeline\">\r\n          <div className=\"container\">\r\n            <div className=\"header\">\r\n              <h1>Projects in pipeline</h1>\r\n              <div className=\"underline\" />\r\n            </div>\r\n            <div className=\"main\">\r\n              {projectsPipeline.map(project => (\r\n                <ProjectTile data={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"technologies\" id=\"technologies\">\r\n          <div className=\"container\">\r\n            <div className=\"header\">\r\n              <h1>Key languages</h1>\r\n              <div className=\"underline\" />\r\n            </div>\r\n            <div className=\"main\">\r\n              {technologies.map(technology => (\r\n                <TechnologyTile data={technology} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n  dispatch({\r\n    type: GET_AUTH,\r\n  });\r\n};\r\n\r\nexport const addAuth = data => dispatch => {\r\n  dispatch({\r\n    type: ADD_AUTH,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const removeAuth = () => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_AUTH,\r\n  });\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any) {\r\n  return axios.get(baseUrl + endpoint, headers);\r\n  // .then(function(response) {\r\n  //     return Promise.resolve(response);\r\n  // }\r\n  // )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any) {\r\n  return axios.post(baseUrl + endpoint, payload, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any) {\r\n  return axios.put(baseUrl + endpoint, payload, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n  return axios.delete(baseUrl + endpoint, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n","import { compose } from 'redux';\r\nimport React, { useEffect } from 'react';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { withCookies, ReactCookieProps } from 'react-cookie';\r\nimport { withRouter } from 'react-router';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport { setProfile } from '../../actions/ProfileActions';\r\n\r\ninterface Props extends ReactCookieProps {\r\n  authorization: Authorization;\r\n  profile: any;\r\n  addAuth: Function;\r\n  getAuth: Function;\r\n  removeAuth: Function;\r\n  cookies: any;\r\n  history: any;\r\n  redirectIfNotAuthenticated: boolean;\r\n}\r\n\r\nconst AuthInit = (props: Props) => {\r\n  const profile = useSelector((state) => state.profile);\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   if (!props.authorization.isAuth && props.cookies.get('isAuth')) {\r\n  //     props.addAuth({\r\n  //       isAuth: true,\r\n  //       token: props.cookies.get('token'),\r\n  //       secret: props.cookies.get('secret'),\r\n  //       name: props.cookies.get('name'),\r\n  //     });\r\n  //   }\r\n  //   props.getAuth();\r\n  // }, [props.authorization.isAuth]);\r\n\r\n  useEffect(() => {\r\n    if (profile.appStatus === 'mounted') {\r\n      const authKey = props.cookies.get('ioak');\r\n      if (authKey) {\r\n        httpGet(`/auth/session/${authKey}`, null).then((sessionResponse) => {\r\n          if (sessionResponse.status === 200) {\r\n            dispatch(\r\n              addAuth({\r\n                isAuth: true,\r\n                token: sessionResponse.data.token,\r\n                secret: '',\r\n                firstName: sessionResponse.data.firstName,\r\n                lastName: sessionResponse.data.lastName,\r\n                email: sessionResponse.data.email,\r\n              })\r\n            );\r\n            dispatch(setProfile({ ...profile, appStatus: 'authenticated' }));\r\n          }\r\n        });\r\n      }\r\n      // else if (props.redirectIfNotAuthenticated) {\r\n      //   window.location.href = `http://localhost:3010/#/${props.profile.tenant}/login?appId=${process.env.REACT_APP_ONEAUTH_APP_ID}`;\r\n      // }\r\n      else {\r\n        dispatch(setProfile({ ...profile, appStatus: 'authenticated' }));\r\n      }\r\n    }\r\n  }, [profile.appStatus]);\r\n\r\n  return <></>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\r\n  compose(withCookies, withRouter)(AuthInit)\r\n);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\n\r\nconst Backdrop = () => {\r\n  const [backdrop, setBackdrop] = useState('');\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'dialog') {\r\n        if (message.signal) {\r\n          setBackdrop('backdrop-fade');\r\n        } else {\r\n          setBackdrop('');\r\n        }\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  return <div className={backdrop} />;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\nconst Notification = () => {\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notification, setNotification] = useState<\r\n    { type?: string; message?: any } | undefined\r\n  >(undefined);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'notification') {\r\n        if (!message.signal) {\r\n          setNotification(undefined);\r\n        } else {\r\n          setNotification(message.data);\r\n          setSpinner(false);\r\n\r\n          if (message.data && message.data.duration) {\r\n            setTimeout(() => {\r\n              sendMessage('notification', false);\r\n            }, message.data.duration);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (message.name === 'spinner') {\r\n        setSpinner(message.signal);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {notification && (\r\n        <div className={`notification ${notification?.type}`}>\r\n          <div className=\"message\">{notification?.message}</div>\r\n        </div>\r\n      )}\r\n      {spinner && <div data-test=\"spinner\" className=\"lds-dual-ring\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","const constants = {\r\n  API_URL_TENANT: '/tenant',\r\n  API_URL_TENANT_BANNER: '/tenant/banner',\r\n  API_URL_TENANT_CREATE: '/tenant/create',\r\n  API_TENANT_URL: '/tenant/sendURL',\r\n\r\n  API_URL_PRESIGNUP: '/auth/keys',\r\n  API_URL_RESET: '/auth/reset',\r\n  API_URL_CODE: '/auth/sendResetCode',\r\n  API_URL_USER_DETAILS: '/user/details',\r\n\r\n  API_URL_STAGE: '/stage',\r\n  API_URL_PREDICT: '/model/predict',\r\n\r\n  API_URL_ARTICLE: '/article',\r\n  API_URL_CATEGORY: '/category',\r\n  API_URL_FAQ: '/faq',\r\n  API_URL_SR: '/servicerequests',\r\n  API_URL_USER: '/user',\r\n  API_URL: '/auth/',\r\n  API_SIGNIN: '/signin',\r\n  API_SIGNUP: '/signup',\r\n  API_KEYS: '/keys',\r\n  API_JWT: '/signin/jwt',\r\n\r\n  API_SPACE_CREATE: '/space/create',\r\n};\r\n\r\nexport default constants;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport AuthInit from './AuthInit';\r\nimport Home from '../Home';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  getAuth: Function;\r\n  path: string;\r\n  render: any;\r\n  profile: any;\r\n  setProfile: Function;\r\n  getProfile: Function;\r\n  component: any;\r\n}\r\n\r\nconst OakRoute = ({\r\n  profile,\r\n  getProfile,\r\n  setProfile,\r\n  component: ChildComponent,\r\n  ...rest\r\n}) => {\r\n  useEffect(() => {\r\n    console.log(profile.appStatus, profile.loginPage);\r\n    if (profile.appStatus === 'notmounted' && !profile.loginPage) {\r\n      setProfile({ tenant: rest.match.params.tenant, appStatus: 'mounted' });\r\n    } else {\r\n      setProfile({ tenant: rest.match.params.tenant });\r\n    }\r\n    middlewares(rest.middleware);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    middlewares(rest.middleware);\r\n  }, [profile.appStatus]);\r\n\r\n  const middlewares = layers => {\r\n    if (profile.appStatus === 'authenticated') {\r\n      layers?.forEach(middlewareName => {\r\n        runMidleware(middlewareName);\r\n      });\r\n    }\r\n  };\r\n\r\n  const runMidleware = middlewareName => {\r\n    console.log(middlewareName);\r\n    switch (middlewareName) {\r\n      case 'isAuthenticated':\r\n        return isAuthenticated();\r\n      case 'isAdmin':\r\n        return isAdmin();\r\n    }\r\n  };\r\n\r\n  const isAuthenticated = () => {\r\n    if (rest.authorization.isAuth) {\r\n      return true;\r\n    }\r\n    redirectToLogin();\r\n    return false;\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    redirectToUnauthorized();\r\n    return false;\r\n  };\r\n\r\n  const redirectToLogin = () => {\r\n    window.location.href = `http://localhost:3010/#/login`;\r\n  };\r\n\r\n  const redirectToUnauthorized = () => {\r\n    rest.history.push(`/${profile.tenant}/unauthorized`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AuthInit\r\n        profile={profile}\r\n        redirectIfNotAuthenticated={\r\n          rest.middleware && rest.middleware.indexOf('isAuthenticated') !== -1\r\n        }\r\n      />\r\n      {(!rest.middleware ||\r\n        rest.middleware.indexOf('isAuthenticated') === -1 ||\r\n        (profile.appStatus === 'authenticated' &&\r\n          rest.authorization.isAuth)) && (\r\n        <ChildComponent\r\n          {...rest}\r\n          profile={profile}\r\n          getProfile={getProfile}\r\n          setProfile={setProfile}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAuth })(OakRoute);\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Home from '../Home';\r\nimport Landing from '../Landing';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport constants from '../Constants';\r\nimport OakRoute from '../Auth/OakRoute';\r\n\r\nconst themes = {\r\n  themecolor1: getTheme('#69A7BF'),\r\n  themecolor2: getTheme('#99587B'),\r\n  themecolor3: getTheme('#A66C26'),\r\n  themecolor4: getTheme('#37AE82'),\r\n};\r\n\r\nfunction getTheme(color: string) {\r\n  return createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: color,\r\n      },\r\n      secondary: {\r\n        main: color,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\ninterface Props {\r\n  getProfile: Function;\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  getUser: Function;\r\n  addUser: Function;\r\n  cookies: any;\r\n\r\n  // event: PropTypes.object,\r\n  profile: any;\r\n  authorization: Authorization;\r\n}\r\n\r\nconst Content = (props: Props) => {\r\n  useEffect(() => {\r\n    props.getProfile();\r\n    props.getAuth();\r\n    props.getAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe((message) => {\r\n      if (message.name === 'session expired') {\r\n        logout(null, 'failure', 'Session expired. Login again');\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      props.authorization &&\r\n      props.authorization.token &&\r\n      props.profile.tenant\r\n    ) {\r\n      httpGet(`${constants.API_URL_USER}/${props.profile.tenant}/`, {\r\n        headers: {\r\n          Authorization: props.authorization.token,\r\n        },\r\n      }).then((response) => {\r\n        props.addUser(response.data.data[0]);\r\n      });\r\n    }\r\n  }, [props.authorization]);\r\n\r\n  const logout = (\r\n    event: any,\r\n    type = 'success',\r\n    message = 'You have been logged out'\r\n  ) => {\r\n    props.removeAuth();\r\n    props.cookies.remove('ioak');\r\n    sendMessage('notification', true, {\r\n      type,\r\n      message,\r\n      duration: 3000,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`App ${props.profile.theme} ${props.profile.textSize} ${props.profile.themeColor}`}\r\n    >\r\n      <HashRouter>\r\n        <AuthInit />\r\n        <Backdrop />\r\n        <div className=\"body\">\r\n          <div className=\"body-content\">\r\n            <Notification />\r\n            <MuiThemeProvider theme={themes.themecolor1}>\r\n              <Route\r\n                path=\"/home\"\r\n                render={(propsLocal) => (\r\n                  <OakRoute\r\n                    {...propsLocal}\r\n                    {...props}\r\n                    logout={() => logout}\r\n                    component={Home}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                render={(propsLocal: any) => (\r\n                  <Home {...propsLocal} {...props} logout={() => logout} />\r\n                )}\r\n              />\r\n            </MuiThemeProvider>\r\n          </div>\r\n        </div>\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getAuth,\r\n  addAuth,\r\n  removeAuth,\r\n  getProfile,\r\n  setProfile,\r\n})(withCookies(Content));\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button-square-animated.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nconst App = props => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Content {...props} />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}