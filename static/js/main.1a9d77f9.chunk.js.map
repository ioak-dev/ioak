{"version":3,"sources":["images/ioak_white.svg","images/ioak_black.svg","images/github_white.svg","images/github_black.svg","reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","actions/ProfileActions.ts","events/MessageService.ts","components/Navigation/Links.tsx","events/SearchEvent.ts","oakui/SearchBar.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","oakui/OakButton.tsx","oakui/OakCardWide.tsx","components/Home/ProjectTile.tsx","components/Home/TechnologyTile.tsx","components/Home/index.tsx","actions/AuthActions.ts","components/Lib/RestTemplate.ts","components/Auth/AuthInit.tsx","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Constants.ts","components/Auth/OakRoute.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","initialState","isAuth","email","firstName","lastName","theme","textSize","themeColor","tenant","appStatus","combineReducers","authorization","state","action","type","console","log","payload","token","profile","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","getProfile","dispatch","setProfile","subject","Subject","sendMessage","name","signal","data","next","receiveMessage","asObservable","Links","props","className","to","id","searchTextChangedEvent$","BehaviorSubject","searchEvent$","SearchBar","useState","searchText","setSearchText","useEffect","searchTextChangedEventListener","subscribe","unsubscribe","method","onSubmit","event","preventDefault","noValidate","alt","spellCheck","autoComplete","autoFocus","placeholder","required","value","onChange","target","xmlns","width","height","viewBox","d","Desktop","showSearchBar","setShowSearchBar","message","transparent","src","ioakBlack","ioakWhite","onClick","toggleDarkMode","Mobile","menu","setData","toggleMenu","mirrorBlack","mirrorWhite","connect","withCookies","withRouter","visible","mobilemenu","chooseTheme","showSettings","transparentNavBar","firstLoad","toggleSettings","OakButton","style","variant","children","invert","small","align","getStyle","icon","OakCardWide","reverse","image","ProjectTile","useSelector","tile","lightLogo","darkLogo","title","description","dangerouslySetInnerHTML","__html","footnote","appUrl","window","open","codeUrl","map","item","url","githubLogoLight","githubLogoDark","label","TechnologyTile","projectsCompleted","require","projectsInprogress","projectsPipeline","technologies","sectionNames","Home","hash","history","location","document","getElementById","substr","setTimeout","scrollIntoView","behavior","sectionName","addEventListener","classList","add","remove","project","technology","getAuth","addAuth","removeAuth","baseUrl","process","httpGet","endpoint","headers","axios","get","useDispatch","authKey","cookies","then","sessionResponse","status","secret","Backdrop","backdrop","setBackdrop","eventBus","Notification","spinner","setSpinner","undefined","notification","setNotification","duration","data-test","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL_STAGE","API_URL_PREDICT","API_URL_ARTICLE","API_URL_CATEGORY","API_URL_FAQ","API_URL_SR","API_URL_USER","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","API_SPACE_CREATE","ChildComponent","component","rest","loginPage","match","params","middlewares","layers","forEach","middlewareName","runMidleware","isAuthenticated","isAdmin","redirectToLogin","redirectToUnauthorized","href","push","redirectIfNotAuthenticated","indexOf","themes","themecolor1","getTheme","themecolor2","themecolor3","themecolor4","color","createMuiTheme","palette","primary","main","secondary","logout","Authorization","response","addUser","path","render","propsLocal","exact","App","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a9d77f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ioak_white.5d65b00b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ioak_black.c077c1a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_white.05f8f424.svg\";","module.exports = __webpack_public_path__ + \"static/media/github_black.85801247.svg\";","import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\n\nconst initialState = {\n  isAuth: false,\n  email: '',\n  firstName: '',\n  lastName: '',\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_AUTH:\n      console.log('GET_AUTH reducer');\n      return {\n        ...state,\n      };\n    case ADD_AUTH:\n      console.log('ADD_AUTH reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case REMOVE_AUTH:\n      console.log('REMOVE_AUTH reducer');\n      return {\n        ...state,\n        isAuth: false,\n        firstName: '',\n        lastName: '',\n        email: '',\n        token: '',\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\n\nconst initialState = {\n  theme: 'theme_light',\n  textSize: 'textsize_medium',\n  themeColor: 'themecolor1',\n  tenant: '',\n  appStatus: 'notmounted',\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROFILE:\n      console.log('GET_PROFILE reducer');\n      return {\n        ...state,\n      };\n    case SET_PROFILE:\n      console.log('SET_PROFILE reducer');\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport AuthReducer from './AuthReducer';\nimport ProfileReducer from './ProfileReducer';\n\nexport default combineReducers({\n  authorization: AuthReducer,\n  profile: ProfileReducer,\n});\n","export const GET_AUTH = 'GET_AUTH';\nexport const ADD_AUTH = 'ADD_AUTH';\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\n\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const SET_PROFILE = 'SET_PROFILE';\n\nexport const GET_USER = 'GET_USER';\nexport const ADD_USER = 'ADD_USER';\n\nexport const FETCH_ARTICLE = 'FETCH_ARTICLE';\nexport const FETCH_REQUEST = 'FETCH_REQUEST';\nexport const FETCH_STAGE = 'FETCH_STAGE';\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware) // ,\n    // window['__REDUX_DEVTOOLS_EXTENSION__'] &&\n    //   window['__REDUX_DEVTOOLS_EXTENSION__']()\n  )\n);\n\nexport default store;\n","import { GET_PROFILE, SET_PROFILE } from './types';\n\nexport const getProfile = () => dispatch => {\n  dispatch({\n    type: GET_PROFILE,\n  });\n};\n\nexport const setProfile = payload => dispatch => {\n  dispatch({\n    type: SET_PROFILE,\n    payload,\n  });\n};\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { Message } from '../components/Types/GeneralTypes';\n\nconst subject = new Subject<Message>();\n\nexport function sendMessage(name: string, signal = true, data?: {}) {\n  subject.next({\n    name,\n    signal,\n    data,\n  });\n}\n\nexport function clearMessages() {\n  subject.next();\n}\n\nexport function receiveMessage(): Observable<Message> {\n  return subject.asObservable();\n}\n","import React from 'react';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nimport './style.scss';\nimport { NavLink } from 'react-router-dom';\nimport { Authorization, Profile } from '../Types/GeneralTypes';\nimport OakButton from '../../oakui/OakButton';\nimport { sendMessage } from '../../events/MessageService';\n\ninterface Props {\n  authorization: Authorization;\n  profile: Profile;\n}\n\nconst Links = (props: Props) => {\n  const navigate = section => {\n    sendMessage('navigate', true, section);\n  };\n  return (\n    <div className=\"links\">\n      {/* <Link smooth to=\"/home#technologies\">\n        Technologies\n      </Link> */}\n      <NavLink to=\"/home#intro\" className=\"navitem\" id=\"link_intro\">\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/home#projects_completed\"\n        className=\"navitem\"\n        id=\"link_projects_completed\"\n      >\n        Projects\n      </NavLink>\n      <NavLink\n        to=\"/home#technologies\"\n        className=\"navitem\"\n        id=\"link_technologies\"\n      >\n        Programming Languages\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Links;\n","import { BehaviorSubject, Subject } from 'rxjs';\n\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>('');\nexport const searchEvent$ = new Subject<string>();\n","import React, { useEffect, useState } from 'react';\nimport './SearchBar.scss';\nimport { searchTextChangedEvent$, searchEvent$ } from '../events/SearchEvent';\n\ninterface Props {\n  alt?: boolean;\n}\n\nconst SearchBar = (props: Props) => {\n  const [searchText, setSearchText] = useState('');\n\n  useEffect(() => {\n    const searchTextChangedEventListener = searchTextChangedEvent$.subscribe(\n      data => {\n        setSearchText(data);\n      }\n    );\n    return () => searchTextChangedEventListener.unsubscribe();\n  }, []);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    searchEvent$.next(searchText);\n  };\n\n  const handleChange = event => {\n    searchTextChangedEvent$.next(event.target.value);\n  };\n\n  return (\n    <form method=\"GET\" onSubmit={onSubmit} noValidate>\n      <div className={`search-bar${props.alt ? ' alt' : ''}`}>\n        <input\n          name=\"searchText\"\n          spellCheck={false}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\"\n          required\n          value={searchText}\n          onChange={handleChange}\n        />\n        <button className=\"icon\">\n          <i>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n            </svg>\n          </i>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\n\nimport './style.scss';\nimport ioakWhite from '../../images/ioak_white.svg';\nimport ioakBlack from '../../images/ioak_black.svg';\nimport Links from './Links';\nimport { Authorization, Profile } from '../Types/GeneralTypes';\nimport { receiveMessage } from '../../events/MessageService';\nimport SearchBar from '../../oakui/SearchBar';\n\ninterface Props {\n  sendEvent: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  authorization: Authorization;\n  getProfile: Function;\n  toggleDarkMode: Function;\n  profile: Profile;\n  transparent: boolean;\n  toggleSettings: any;\n}\n\nconst Desktop = (props: Props) => {\n  const [showSearchBar, setShowSearchBar] = useState(false);\n\n  useEffect(() => {\n    props.getProfile();\n  }, []);\n\n  useEffect(() => {\n    receiveMessage().subscribe(message => {\n      if (message.name === 'show-navbar-element') {\n        setShowSearchBar(message.signal);\n      }\n    });\n  }, []);\n\n  return (\n    <div\n      className={\n        props.transparent ? 'navbar desktop transparent' : 'navbar desktop'\n      }\n    >\n      <div className=\"left\">\n        {!props.transparent && props.profile.theme === 'theme_light' && (\n          <img className=\"logo\" src={ioakBlack} alt=\"IOAK logo\" />\n        )}\n        {(props.transparent || props.profile.theme === 'theme_dark') && (\n          <img className=\"logo\" src={ioakWhite} alt=\"IOAK logo\" />\n        )}\n        <Links authorization={props.authorization} profile={props.profile} />\n        {showSearchBar && <SearchBar alt />}\n      </div>\n      <div className=\"right\">\n        <div className=\"dark-mode\">\n          <i className=\"material-icons\" onClick={() => props.toggleDarkMode()}>\n            brightness_6\n          </i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Desktop;\n","import React, { useEffect, useState } from 'react';\nimport './style.scss';\nimport mirrorWhite from '../../images/ioak_white.svg';\nimport mirrorBlack from '../../images/ioak_black.svg';\nimport Links from './Links';\nimport { Authorization, Profile } from '../Types/GeneralTypes';\nimport SearchBar from '../../oakui/SearchBar';\nimport { receiveMessage } from '../../events/MessageService';\n\ninterface Props {\n  sendEvent: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  authorization: Authorization;\n  getProfile: Function;\n  toggleDarkMode: Function;\n  profile: Profile;\n  transparent: boolean;\n  toggleSettings: any;\n}\n\nconst Mobile = (props: Props) => {\n  const [data, setData] = useState({\n    showSearchBar: false,\n    menu: false,\n  });\n\n  useEffect(() => {\n    props.getProfile();\n  }, []);\n\n  useEffect(() => {\n    receiveMessage().subscribe(message => {\n      if (message.name === 'show-navbar-element') {\n        setData({ ...data, showSearchBar: message.signal });\n      }\n    });\n  }, []);\n\n  const toggleMenu = () => {\n    setData({ ...data, menu: !data.menu });\n  };\n\n  return (\n    <>\n      <div\n        className={\n          props.transparent ? 'navbar mobile transparent' : 'navbar mobile'\n        }\n      >\n        <div className=\"left\">\n          {props.profile.theme === 'theme_light' && (\n            <img className=\"logo\" src={mirrorBlack} alt=\"Mirror logo\" />\n          )}\n          {props.profile.theme === 'theme_dark' && (\n            <img className=\"logo\" src={mirrorWhite} alt=\"Mirror logo\" />\n          )}\n          {/* links */}\n        </div>\n        <div className=\"right\">\n          <div className=\"dark-mode\">\n            <i\n              className=\"material-icons\"\n              onClick={() => props.toggleDarkMode()}\n            >\n              brightness_6\n            </i>\n          </div>\n        </div>\n      </div>\n      <div\n        className={data.menu ? 'slider show' : 'slider hide'}\n        onClick={toggleMenu}\n      >\n        <div\n          className={data.menu ? 'container' : 'container hidetext'}\n          onClick={toggleMenu}\n        >\n          <div className=\"action\">\n            <div className=\"buttons\" />\n          </div>\n          <Links authorization={props.authorization} profile={props.profile} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Mobile;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { withCookies } from 'react-cookie';\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\n\nimport './style.scss';\nimport Desktop from './Desktop';\nimport Mobile from './Mobile';\n\nimport { Authorization, Profile } from '../Types/GeneralTypes';\nimport { receiveMessage } from '../../events/MessageService';\n\ninterface Props {\n  sendEvent: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  authorization: Authorization;\n  getProfile: Function;\n  setProfile: Function;\n  profile: Profile;\n  transparent: boolean;\n  toggleSettings: any;\n  history: any;\n  cookies: any;\n  location: any;\n  match: any;\n}\n\nconst Navigation = (props: Props) => {\n  const [data, setData] = useState({\n    visible: false,\n    mobilemenu: 'hide',\n    chooseTheme: false,\n    showSettings: false,\n    transparentNavBar: false,\n    firstLoad: true,\n  });\n\n  useEffect(() => {\n    props.getProfile();\n  }, []);\n\n  useEffect(() => {\n    receiveMessage().subscribe(message => {\n      if (message.name === 'navbar-transparency') {\n        setData({ ...data, transparentNavBar: message.signal });\n      }\n      if (message.name === 'loggedin') {\n        // props.reloadProfile(nextProps.authorization);\n        setData({ ...data, firstLoad: false });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (data.firstLoad && props.authorization && props.authorization.isAuth) {\n      setData({ ...data, firstLoad: false });\n    }\n  }, [props.authorization.isAuth]);\n\n  const toggleDarkMode = () => {\n    if (props.profile.theme === 'theme_dark') {\n      props.setProfile({\n        ...props.profile,\n        theme: 'theme_light',\n      });\n    } else {\n      props.setProfile({\n        ...props.profile,\n        theme: 'theme_dark',\n      });\n    }\n  };\n\n  const toggleSettings = () => {\n    setData({ ...data, showSettings: !data.showSettings });\n  };\n\n  return (\n    <div className=\"nav\">\n      <Desktop\n        {...props}\n        toggleSettings={toggleSettings}\n        transparent={data.transparentNavBar}\n        toggleDarkMode={toggleDarkMode}\n      />\n      <Mobile\n        {...props}\n        toggleSettings={toggleSettings}\n        transparent={data.transparentNavBar}\n        toggleDarkMode={toggleDarkMode}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfile, setProfile })(\n  withCookies(withRouter(Navigation))\n);\n","import React, { ReactNode } from 'react';\nimport './styles/oak-button-slide.scss';\n\ninterface Props {\n  icon?: string;\n  action?: any;\n  variant?:\n    | 'block'\n    | 'outline'\n    | 'animate in'\n    | 'animate out'\n    | 'animate none'\n    | 'disabled';\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default';\n  align?: 'left' | 'right' | 'center';\n  small?: boolean;\n  invert?: boolean;\n  children?: ReactNode;\n  type?: 'button' | 'submit';\n}\n\nconst OakButton = (props: Props) => {\n  const getStyle = () => {\n    let style = props.theme ? props.theme : '';\n    style += props.variant ? ` ${props.variant}` : '';\n\n    if (!props.children) {\n      style += ' icon';\n    }\n\n    style += props.invert ? ' invert' : '';\n\n    style += props.small ? ' small' : '';\n\n    style += props.align ? ` align-${props.align}` : '';\n\n    return style;\n  };\n\n  return (\n    // eslint-disable-next-line react/button-has-type\n    <button className={`oak-button ${getStyle()}`} onClick={props.action}>\n      {props.icon && <i className=\"material-icons\">{props.icon}</i>}\n      {props.children && props.children}\n    </button>\n  );\n};\n\nexport default OakButton;\n","import React, { ReactNode, useState, useEffect } from 'react';\r\nimport './styles/oak-card-wide.scss';\r\n\r\nconst rootAssetsPath = 'images';\r\n\r\ninterface Props {\r\n  image: any;\r\n  children?: ReactNode;\r\n  reverse?: boolean;\r\n}\r\nfunction OakCardWide(props: Props) {\r\n  return (\r\n    <div className={props.reverse ? 'oak-wide-card reverse' : 'oak-wide-card'}>\r\n      <div className=\"content\">{props.children}</div>\r\n      <div className=\"preview\">\r\n        <img\r\n          className=\"photo\"\r\n          src={`${rootAssetsPath}/${props.image}`}\r\n          alt=\"tile\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OakCardWide;\r\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './style.scss';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport OakButton from '../../oakui/OakButton';\nimport OakCardWide from '../../oakui/OakCardWide';\nimport githubLogoLight from '../../images/github_white.svg';\nimport githubLogoDark from '../../images/github_black.svg';\n\ninterface Props {\n  data: {\n    lightLogo: string;\n    darkLogo: string;\n    tile: string;\n    title: string;\n    description: string;\n    footnote: string;\n    appUrl: string;\n    codeUrl: any;\n  };\n}\nconst rootAssetsPath = 'images';\n\nconst ProjectTile = (props: Props) => {\n  const profile = useSelector(state => state.profile);\n\n  const visitSite = () => {\n    window.open(props.data.appUrl);\n  };\n\n  const visitGithub = url => {\n    window.open(url);\n  };\n\n  return (\n    <OakCardWide image={props.data.tile}>\n      <div className=\"project\">\n        <div className=\"title\">\n          <div>\n            <img\n              className=\"logo\"\n              src={\n                profile.theme === 'theme_dark'\n                  ? `${rootAssetsPath}/${props.data.lightLogo}`\n                  : `${rootAssetsPath}/${props.data.darkLogo}`\n              }\n              alt=\"logo\"\n            />\n          </div>\n          <div className=\"subtitle\">{props.data.title}</div>\n          <div className=\"underline\" />\n        </div>\n        <div className=\"description\">{props.data.description}</div>\n        <div\n          className=\"footnote\"\n          dangerouslySetInnerHTML={{ __html: props.data.footnote }}\n        />\n        <div className=\"footer\">\n          {props.data.appUrl && (\n            <div>\n              <OakButton\n                theme=\"primary\"\n                variant=\"animate in\"\n                action={visitSite}\n                icon=\"touch_app\"\n              >\n                Visit Site\n              </OakButton>\n            </div>\n          )}\n          {props.data.codeUrl &&\n            props.data.codeUrl.map(item => (\n              <OakButton\n                theme=\"primary\"\n                variant=\"animate in\"\n                action={() => visitGithub(item.url)}\n              >\n                <div className=\"button-with-logo\">\n                  <img\n                    src={\n                      profile.theme === 'theme_dark'\n                        ? githubLogoLight\n                        : githubLogoDark\n                    }\n                    alt=\"github logo\"\n                  />\n                  {item.label}\n                </div>\n              </OakButton>\n            ))}\n        </div>\n      </div>\n    </OakCardWide>\n  );\n};\n\nexport default ProjectTile;\n","import React, { useEffect } from 'react';\r\nimport './style.scss';\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\ninterface Props {\r\n  data: {\r\n    logo: string;\r\n    title: string;\r\n    description: string;\r\n  };\r\n}\r\nconst rootAssetsPath = 'images';\r\n\r\nconst TechnologyTile = (props: Props) => {\r\n  return (\r\n    <div className=\"technology\">\r\n      {/* <div className=\"logo\">\r\n        <img\r\n          className=\"logo\"\r\n          src={`${rootAssetsPath}/${props.data.logo}`}\r\n          alt=\"logo\"\r\n        />\r\n      </div> */}\r\n      <div className=\"title\">{props.data.title}</div>\r\n      <div className=\"description\">{props.data.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechnologyTile;\r\n","import React, { useEffect } from 'react';\nimport Navigation from '../Navigation';\nimport OakButton from '../../oakui/OakButton';\nimport './style.scss';\nimport { receiveMessage } from '../../events/MessageService';\nimport ProjectTile from './ProjectTile';\nimport TechnologyTile from './TechnologyTile';\n\nconst projectsCompleted = require('./projects_completed.json');\nconst projectsInprogress = require('./projects_inprogress.json');\nconst projectsPipeline = require('./projects_pipeline.json');\nconst technologies = require('./technologies.json');\n\ninterface Props {\n  label?: string;\n  history: any;\n}\nconst sectionNames = ['intro', 'projects_completed', 'technologies'];\n\nconst Home = (props: Props) => {\n  useEffect(() => {\n    const { hash } = props.history.location;\n    if (hash && document && document.getElementById(hash.substr(1))) {\n      // if (hash.substr(1) !== 'intro') {\n      setTimeout(() => {\n        document\n          .getElementById(hash.substr(1))\n          ?.scrollIntoView({ behavior: 'smooth' });\n      }, 0);\n      // }\n    }\n  }, [props.history.location.hash]);\n  useEffect(() => {\n    sectionNames.map(sectionName => {\n      document\n        .getElementById(sectionName)\n        ?.addEventListener('mouseenter', () => {\n          sectionNames.map(item => {\n            if (item === sectionName) {\n              document\n                .getElementById(`link_${item}`)\n                ?.classList.add('active-link');\n            } else {\n              document\n                .getElementById(`link_${item}`)\n                ?.classList.remove('active-link');\n            }\n          });\n        });\n    });\n  }, []);\n  useEffect(() => {\n    receiveMessage().subscribe(event => {\n      if (event.name === 'navigate') {\n        console.log(event);\n        setTimeout(() => {\n          document\n            .getElementById(event.data)\n            ?.scrollIntoView({ behavior: 'smooth' });\n        }, 1000);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"home\">\n      <header>\n        <div>\n          <Navigation {...props} />\n        </div>\n      </header>\n\n      <main>\n        <section className=\"intro\" id=\"intro\">\n          <div className=\"overlay\">\n            <div className=\"container\">\n              <div className=\"header\">\n                <h1>Open developer community</h1>\n                <p className=\"subtitle\">Knowledge should be free for all</p>\n              </div>\n              {/* <div className=\"main\">\n                <p>\n                  Join us to learn programming in realtime. Build pages that\n                  convert your traffic and leads into more business – even if\n                  web design is not really your thing\n                </p>\n              </div> */}\n              <div className=\"footer\">\n                <div className=\"call-to-action\">\n                  {/* <OakButton theme=\"primary\" variant=\"animate none\">\n                    Join the community\n                  </OakButton> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"projects completed\" id=\"projects_completed\">\n          <div className=\"container\">\n            <div className=\"header\">\n              <h1>Completed projects</h1>\n              <div className=\"underline\" />\n            </div>\n            <div className=\"main\">\n              {projectsCompleted.map(project => {\n                return <ProjectTile data={project} />;\n              })}\n            </div>\n          </div>\n        </section>\n        <section className=\"projects inprogress\" id=\"projects_inprogress\">\n          <div className=\"container\">\n            <div className=\"header\">\n              <h1>Ongoing projects</h1>\n              <div className=\"underline\" />\n            </div>\n            <div className=\"main\">\n              {projectsInprogress.map(project => (\n                <ProjectTile data={project} />\n              ))}\n            </div>\n          </div>\n        </section>\n        <section className=\"projects pipeline\" id=\"projects_pipeline\">\n          <div className=\"container\">\n            <div className=\"header\">\n              <h1>Projects in pipeline</h1>\n              <div className=\"underline\" />\n            </div>\n            <div className=\"main\">\n              {projectsPipeline.map(project => (\n                <ProjectTile data={project} />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        <section className=\"technologies\" id=\"technologies\">\n          <div className=\"container\">\n            <div className=\"header\">\n              <h1>Key languages</h1>\n              <div className=\"underline\" />\n            </div>\n            <div className=\"main\">\n              {technologies.map(technology => (\n                <TechnologyTile data={technology} />\n              ))}\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Home;\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\n\nexport const getAuth = () => dispatch => {\n  dispatch({\n    type: GET_AUTH,\n  });\n};\n\nexport const addAuth = data => dispatch => {\n  dispatch({\n    type: ADD_AUTH,\n    payload: data,\n  });\n};\n\nexport const removeAuth = () => dispatch => {\n  dispatch({\n    type: REMOVE_AUTH,\n  });\n};\n","import axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_API_URL;\n\nexport function httpGet(endpoint: string, headers: any) {\n  return axios.get(baseUrl + endpoint, headers);\n  // .then(function(response) {\n  //     return Promise.resolve(response);\n  // }\n  // )\n}\n\nexport function httpPost(endpoint: string, payload: any, headers: any) {\n  return axios.post(baseUrl + endpoint, payload, headers);\n  //     .then(function(response) {\n  //         return Promise.resolve(response);\n  //     }\n  // )\n}\n\nexport function httpPut(endpoint: string, payload: any, headers: any) {\n  return axios.put(baseUrl + endpoint, payload, headers);\n  //     .then(function(response) {\n  //         return Promise.resolve(response);\n  //     }\n  // )\n}\n\nexport function httpDelete(endpoint: string, headers: any) {\n  return axios.delete(baseUrl + endpoint, headers);\n  //     .then(function(response) {\n  //         return Promise.resolve(response);\n  //     }\n  // )\n}\n","import { compose } from 'redux';\nimport React, { useEffect } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { withCookies, ReactCookieProps } from 'react-cookie';\nimport { withRouter } from 'react-router';\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\nimport { Authorization } from '../Types/GeneralTypes';\nimport { httpGet } from '../Lib/RestTemplate';\nimport { setProfile } from '../../actions/ProfileActions';\n\ninterface Props extends ReactCookieProps {\n  authorization: Authorization;\n  profile: any;\n  addAuth: Function;\n  getAuth: Function;\n  removeAuth: Function;\n  cookies: any;\n  history: any;\n  redirectIfNotAuthenticated: boolean;\n}\n\nconst AuthInit = (props: Props) => {\n  const profile = useSelector((state) => state.profile);\n  const dispatch = useDispatch();\n  // useEffect(() => {\n  //   if (!props.authorization.isAuth && props.cookies.get('isAuth')) {\n  //     props.addAuth({\n  //       isAuth: true,\n  //       token: props.cookies.get('token'),\n  //       secret: props.cookies.get('secret'),\n  //       name: props.cookies.get('name'),\n  //     });\n  //   }\n  //   props.getAuth();\n  // }, [props.authorization.isAuth]);\n\n  useEffect(() => {\n    if (profile.appStatus === 'mounted') {\n      const authKey = props.cookies.get('ioak');\n      if (authKey) {\n        httpGet(`/auth/session/${authKey}`, null).then((sessionResponse) => {\n          if (sessionResponse.status === 200) {\n            dispatch(\n              addAuth({\n                isAuth: true,\n                token: sessionResponse.data.token,\n                secret: '',\n                firstName: sessionResponse.data.firstName,\n                lastName: sessionResponse.data.lastName,\n                email: sessionResponse.data.email,\n              })\n            );\n            dispatch(setProfile({ ...profile, appStatus: 'authenticated' }));\n          }\n        });\n      }\n      // else if (props.redirectIfNotAuthenticated) {\n      //   window.location.href = `http://localhost:3010/#/${props.profile.tenant}/login?appId=${process.env.REACT_APP_ONEAUTH_APP_ID}`;\n      // }\n      else {\n        dispatch(setProfile({ ...profile, appStatus: 'authenticated' }));\n      }\n    }\n  }, [profile.appStatus]);\n\n  return <></>;\n};\n\nconst mapStateToProps = (state) => ({\n  authorization: state.authorization,\n});\n\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(\n  compose(withCookies, withRouter)(AuthInit)\n);\n","import React, { useState, useEffect } from 'react';\nimport { receiveMessage } from '../../events/MessageService';\n\nconst Backdrop = () => {\n  const [backdrop, setBackdrop] = useState('');\n  useEffect(() => {\n    const eventBus = receiveMessage().subscribe(message => {\n      if (message.name === 'dialog') {\n        if (message.signal) {\n          setBackdrop('backdrop-fade');\n        } else {\n          setBackdrop('');\n        }\n      }\n    });\n    return () => eventBus.unsubscribe();\n  }, []);\n\n  return <div className={backdrop} />;\n};\n\nexport default Backdrop;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\n\nconst Notification = () => {\n  const [spinner, setSpinner] = useState(false);\n  const [notification, setNotification] = useState<\n    { type?: string; message?: any } | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const eventBus = receiveMessage().subscribe(message => {\n      if (message.name === 'notification') {\n        if (!message.signal) {\n          setNotification(undefined);\n        } else {\n          setNotification(message.data);\n          setSpinner(false);\n\n          if (message.data && message.data.duration) {\n            setTimeout(() => {\n              sendMessage('notification', false);\n            }, message.data.duration);\n          }\n        }\n      }\n\n      if (message.name === 'spinner') {\n        setSpinner(message.signal);\n      }\n    });\n    return () => eventBus.unsubscribe();\n  }, []);\n\n  return (\n    <>\n      {notification && (\n        <div className={`notification ${notification?.type}`}>\n          <div className=\"message\">{notification?.message}</div>\n        </div>\n      )}\n      {spinner && <div data-test=\"spinner\" className=\"lds-dual-ring\" />}\n    </>\n  );\n};\n\nexport default Notification;\n","const constants = {\n  API_URL_TENANT: '/tenant',\n  API_URL_TENANT_BANNER: '/tenant/banner',\n  API_URL_TENANT_CREATE: '/tenant/create',\n  API_TENANT_URL: '/tenant/sendURL',\n\n  API_URL_PRESIGNUP: '/auth/keys',\n  API_URL_RESET: '/auth/reset',\n  API_URL_CODE: '/auth/sendResetCode',\n  API_URL_USER_DETAILS: '/user/details',\n\n  API_URL_STAGE: '/stage',\n  API_URL_PREDICT: '/model/predict',\n\n  API_URL_ARTICLE: '/article',\n  API_URL_CATEGORY: '/category',\n  API_URL_FAQ: '/faq',\n  API_URL_SR: '/servicerequests',\n  API_URL_USER: '/user',\n  API_URL: '/auth/',\n  API_SIGNIN: '/signin',\n  API_SIGNUP: '/signup',\n  API_KEYS: '/keys',\n  API_JWT: '/signin/jwt',\n\n  API_SPACE_CREATE: '/space/create',\n};\n\nexport default constants;\n","import React, { useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAuth } from '../../actions/AuthActions';\nimport { Authorization } from '../Types/GeneralTypes';\nimport AuthInit from './AuthInit';\nimport Home from '../Home';\n\ninterface Props {\n  authorization: Authorization;\n  getAuth: Function;\n  path: string;\n  render: any;\n  profile: any;\n  setProfile: Function;\n  getProfile: Function;\n  component: any;\n}\n\nconst OakRoute = ({\n  profile,\n  getProfile,\n  setProfile,\n  component: ChildComponent,\n  ...rest\n}) => {\n  useEffect(() => {\n    console.log(profile.appStatus, profile.loginPage);\n    if (profile.appStatus === 'notmounted' && !profile.loginPage) {\n      setProfile({ tenant: rest.match.params.tenant, appStatus: 'mounted' });\n    } else {\n      setProfile({ tenant: rest.match.params.tenant });\n    }\n    middlewares(rest.middleware);\n  }, []);\n\n  useEffect(() => {\n    middlewares(rest.middleware);\n  }, [profile.appStatus]);\n\n  const middlewares = layers => {\n    if (profile.appStatus === 'authenticated') {\n      layers?.forEach(middlewareName => {\n        runMidleware(middlewareName);\n      });\n    }\n  };\n\n  const runMidleware = middlewareName => {\n    console.log(middlewareName);\n    switch (middlewareName) {\n      case 'isAuthenticated':\n        return isAuthenticated();\n      case 'isAdmin':\n        return isAdmin();\n    }\n  };\n\n  const isAuthenticated = () => {\n    if (rest.authorization.isAuth) {\n      return true;\n    }\n    redirectToLogin();\n    return false;\n  };\n\n  const isAdmin = () => {\n    redirectToUnauthorized();\n    return false;\n  };\n\n  const redirectToLogin = () => {\n    window.location.href = `http://localhost:3010/#/login`;\n  };\n\n  const redirectToUnauthorized = () => {\n    rest.history.push(`/${profile.tenant}/unauthorized`);\n  };\n\n  return (\n    <>\n      <AuthInit\n        profile={profile}\n        redirectIfNotAuthenticated={\n          rest.middleware && rest.middleware.indexOf('isAuthenticated') !== -1\n        }\n      />\n      {(!rest.middleware ||\n        rest.middleware.indexOf('isAuthenticated') === -1 ||\n        (profile.appStatus === 'authenticated' &&\n          rest.authorization.isAuth)) && (\n        <ChildComponent\n          {...rest}\n          profile={profile}\n          getProfile={getProfile}\n          setProfile={setProfile}\n        />\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  authorization: state.authorization,\n});\n\nexport default connect(mapStateToProps, { getAuth })(OakRoute);\n","import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport './style.scss';\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport { withCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Home from '../Home';\nimport Landing from '../Landing';\nimport PrivateRoute from '../Auth/PrivateRoute';\nimport AuthInit from '../Auth/AuthInit';\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\n\nimport Backdrop from './Backdrop';\nimport Notification from '../Notification';\nimport Navigation from '../Navigation';\nimport { httpGet } from '../Lib/RestTemplate';\nimport { Authorization } from '../Types/GeneralTypes';\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\nimport constants from '../Constants';\nimport OakRoute from '../Auth/OakRoute';\n\nconst themes = {\n  themecolor1: getTheme('#69A7BF'),\n  themecolor2: getTheme('#99587B'),\n  themecolor3: getTheme('#A66C26'),\n  themecolor4: getTheme('#37AE82'),\n};\n\nfunction getTheme(color: string) {\n  return createMuiTheme({\n    palette: {\n      primary: {\n        main: color,\n      },\n      secondary: {\n        main: color,\n      },\n    },\n  });\n}\n\ninterface Props {\n  getProfile: Function;\n  setProfile: Function;\n  getAuth: Function;\n  addAuth: Function;\n  removeAuth: Function;\n  getUser: Function;\n  addUser: Function;\n  cookies: any;\n\n  // event: PropTypes.object,\n  profile: any;\n  authorization: Authorization;\n}\n\nconst Content = (props: Props) => {\n  useEffect(() => {\n    props.getProfile();\n    props.getAuth();\n    props.getAuth();\n  }, []);\n\n  useEffect(() => {\n    const eventBus = receiveMessage().subscribe((message) => {\n      if (message.name === 'session expired') {\n        logout(null, 'failure', 'Session expired. Login again');\n      }\n    });\n    return () => eventBus.unsubscribe();\n  });\n\n  useEffect(() => {\n    if (\n      props.authorization &&\n      props.authorization.token &&\n      props.profile.tenant\n    ) {\n      httpGet(`${constants.API_URL_USER}/${props.profile.tenant}/`, {\n        headers: {\n          Authorization: props.authorization.token,\n        },\n      }).then((response) => {\n        props.addUser(response.data.data[0]);\n      });\n    }\n  }, [props.authorization]);\n\n  const logout = (\n    event: any,\n    type = 'success',\n    message = 'You have been logged out'\n  ) => {\n    props.removeAuth();\n    props.cookies.remove('ioak');\n    sendMessage('notification', true, {\n      type,\n      message,\n      duration: 3000,\n    });\n  };\n\n  return (\n    <div\n      className={`App ${props.profile.theme} ${props.profile.textSize} ${props.profile.themeColor}`}\n    >\n      <HashRouter>\n        <AuthInit />\n        <Backdrop />\n        <div className=\"body\">\n          <div className=\"body-content\">\n            <Notification />\n            <MuiThemeProvider theme={themes.themecolor1}>\n              <Route\n                path=\"/home\"\n                render={(propsLocal) => (\n                  <OakRoute\n                    {...propsLocal}\n                    {...props}\n                    logout={() => logout}\n                    component={Home}\n                  />\n                )}\n              />\n              <Route\n                path=\"/\"\n                exact\n                render={(propsLocal: any) => (\n                  <Home {...propsLocal} {...props} logout={() => logout} />\n                )}\n              />\n            </MuiThemeProvider>\n          </div>\n        </div>\n      </HashRouter>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  authorization: state.authorization,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, {\n  getAuth,\n  addAuth,\n  removeAuth,\n  getProfile,\n  setProfile,\n})(withCookies(Content));\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport './style.scss';\nimport './button-square-animated.scss';\nimport './metric.scss';\nimport Content from './Content';\n\nconst App = props => {\n  return (\n    <Provider store={store}>\n      <Content {...props} />\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { CookiesProvider } from 'react-cookie';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}